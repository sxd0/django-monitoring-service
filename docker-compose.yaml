version: '3.8'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: monitoring_db
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

  web:
    build: .
    command: ["sh", "-c", "./entrypoint.sh python manage.py runserver 0.0.0.0:8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=True
      - DATABASE_URL=mysql://root:12345@db:3306/monitoring_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app-network

  celery:
    build: .
    command: celery -A server_monitoring worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=mysql://root:12345@db:3306/monitoring_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app-network

  celery-beat:
    build: .
    command: celery -A server_monitoring beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=mysql://root:12345@db:3306/monitoring_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge